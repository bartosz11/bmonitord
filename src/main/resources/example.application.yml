# Example configuration file for bmonitord. Read through comments carefully, uncomment lines which need to be uncommented.
# There are examples for some values. Values that need to be replaced are in <>
# Some notes on setup process are available on wiki: https://github.com/bartosz11/bmonitord/wiki/Setup

spring:
  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: validate
  #Uncomment if you're going to use sqlite  
  #database-platform: org.hibernate.community.dialect.SQLiteDialect
  #Your DB credentials go here
  datasource:
    #Format:
    #Example for sqlite: jdbc:sqlite:database.db - database will be saved to a file "database.db"
    #Example for postgres: jdbc:postgresql://<postgres host>:<port>/<database name>
    #Example for mysql/mariadb: jdbc:mysql://<mysql/mariadb host><port>/<database name>
    url: <url>
    #Username and password can be left as blank if you're using sqlite
    username: <username>
    password: <password>
    #Uncomment next two lines if you're using sqlite
    #hikari:
    #  maximum-pool-size: 1
  flyway:
    #Where should flyway look for migrations. Depends on DB you're using
    # For postgres: classpath:migration/common,classpath:migration/postgresql
    # For mysql/mariadb: classpath:migration/common,classpath:migration/mysql
    # For sqlite: classpath:migration/common,classpath:migration/sqlite
    locations: "<look at comments above>"
    #Set this to true if you're running bmonitord for the first time since DB migrations were introduced (April 1st 2023)
    baselineOnMigrate: false
  #Mail needs to be configured
  #it's SMTP, not some provider's Web API
  mail:
    host: <smtp host>
    port: <smtp port>
    username: <smtp user>
    password: <smtp password>
    properties:
      #True or false, depending if your SMTP provider requires a TLS connection. Leaving it as true is recommended if your SMTP provider supports TLS.
      mail.smtp.starttls.enable: true
      mail.smtp.auth: true
      mail.smtp.from: <from - usually the same as username>
    default-encoding: UTF-8
    test-connection: false

monitoring:
  #Set this to false to allow frontend dev server to access this instances API
  production: true
  #Set this to true if your instance is available via HTTPS - cookies will have the Secure flag
  secure-cookies: false
  jwt:
    #Change this to any randomly generated string, length doesn't matter
    secret: <change this>
    #Can be anything, doesn't need to be changed
    issuer: "bmonitord"
  #Timezone used for formatting dates in some notifications
  #List of compatible TZ timezones: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  timezone: <timezone>
  #Change this to false to disable /api/auth/register endpoint, new users won't be able to register
  registration-enabled: true
  #Amount of monitors that can be checked simultaneously
  check-thread-pool-size: 2
  #Domain/address your instance's dashboard should be accessible with
  #can be something like bmonitord.example.com, bmonitord.example.com:1234, 127.0.0.1:123
  domain-origin: <domain>
  #Run System.gc() after monitor checking/data pruning is done. Might reduce RAM usage, default: false
  #Might affect CPU usage (and maybe slightly performance???)
  run-gc-after-tasks: false
  prune:
    #How old an incident/heartbeat object needs to be before automatic deletion, in days
    #you might want to set this to lower value if host's cpu is weak and you're monitoring lots of resources for alert purposes only
    age: 30
    #delay between task runs in seconds, note that the task always runs on app startup
    #86400 seconds = 1 day is default, 43200 = 12 hrs, 21600 = 6 hrs
    delay: 86400

server:
  #You can change port here if you need to
  #Avoid doing this while running in Docker - builtin healthcheck will fail
  port: 8080
  #You don't need to touch lines below
  compression-enabled: true
  compression:
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript
    min-response-size: 1024
  http2:
    enabled: true
#Logging
logging:
  level:
    org.hibernate: info
    org.springframework: info
    root: info
    me.bartosz1: info
#Spring Boot Actuator setup
management:
  endpoints:
    web.base-path: /app
  endpoint:
    health:
      show-details: always
  health:
    diskSpace:
      enabled: false
    ping:
      enabled: false

springdoc:
  packagesToScan: me.bartosz1.monitoring.controllers
  api-docs:
    path: "/api-doc"
  swagger-ui:
    path: "/api-doc/swagger"